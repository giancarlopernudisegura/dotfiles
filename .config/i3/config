# author: Giancarlo Pernudi Segura
# see https://giancarlopernudi.com
#  _  _____
# (_)|____ |
#  _     / /
# | |    \ \
# | |.___/ /
# |_|\____/

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $terminal alacritty
#exec_always --no-startup-id killall compton
exec_always --no-startup-id compton -m 0.75 --config ~/.config/compton/compton.conf
exec_always --no-startup-id xrandr --dpi 160
exec_always --no-startup-id ~/.scripts/bg.app $(ls ~/Pictures/wallpapers/d*.jpg)
exec_always --no-startup-id /usr/bin/dunst
mouse_warping output

# i3-gaps
gaps inner 20
gaps outer 0
bindsym $mod+Shift+plus gaps outer current minus 5
bindsym $mod+Shift+minus gaps outer current plus 5
bindsym $mod+plus gaps inner current minus 5
bindsym $mod+minus gaps inner current plus 5
bindsym $mod+Ctrl+plus gaps inner current set 0; gaps outer current set 0
bindsym $mod+Ctrl+minus gaps inner current set 20; gaps outer current set 0

# window decoration
default_border pixel 1
default_floating_border normal
#border_radius 3

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block above.
font pango:UbuntuMono Nerd Font Mono 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

set $bg-color			#fc3598
set $inactive-bg-color		#00000000
set $text-color			#ffffff
set $inactive-text-color	#ffffff
set $urgent-bg-color		#b611fc
set $indic-color		#fc3598

# window colors
#			border			background		text			indicator
client.focused		$bg-color          	$bg-color		$text-color		$indic-color
client.unfocused	$inactive-bg-color	$inactive-bg-color	$inactive-text-color	$indic-color
client.focused_inactive	$inactive-bg-color	$inactive-bg-color	$inactive-text-color	$indic-color
client.urgent		$urgent-bg-color	$urgent-bg-color	$text-color		$indic-color

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier Mod1

# start a terminal
bindsym $mod+Return exec --no-startup-id $terminal
bindsym $mod+Shift+Return exec --no-startup-id konsole --hide-menubar

# open programs
bindsym $mod+Shift+f exec firefox-nightly
bindsym $mod+Shift+g exec gpmdp
bindsym $mod+Shift+s exec slack
bindsym $mod+o exec st -e ranger
bindsym $mod+d exec nemo
bindsym $mod+Shift+a exec systemsettings5
bindsym $mod+Shift+w exec $terminal -e nmtui
bindsym Print exec spectacle

# kill focused window
bindsym $mod+q kill

# start rofi (a program launcher)
bindsym $mod+space exec rofi -show run
bindsym Mod1+Tab exec rofi -show window
bindsym $mod+x exec grep -v "#" ~/.scripts/emoji | rofi -dmenu -i -p "select emoji" | awk '{print$1}' | tr -d '\n' | xclip -rmlastnl -selection clipboard && dunstify -a ROFI emoji copied
bindsym $mod+z exec cat ~/.scripts/spanish | rofi -dmenu -i -p "Chose an accent:" | awk '{print$1}' | tr -d '\n' | xclip -rmlastnl -selection clipboard && dunstify -a ROFI accent copied
bindsym $mod+c exec rofi -show calc -modi "calc:qalc +u8"

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Mod1+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1	"01: "
set $ws2	"02: 謹"
set $ws3	"03: "
set $ws4	"04: "
set $ws5	"05: "
set $ws6	"06: "
set $ws7	"07: "
set $ws8	"08: "
set $ws9	"09: "
set $ws10	"10: "

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10
bindsym $mod+bracketleft workspace prev
bindsym $mod+bracketright workspace next

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# open applications on specific workspaces
assign [class="Google Play Music Desktop Player"] $ws10
assign [title="System Settings"] $ws9
assign [title="gotop"] $ws10
assign [class="Slack"] $ws10
assign [class="code"] $ws2

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym l resize shrink height 5 px or 5 ppt
        bindsym semicolon resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Up resize grow height 5 px or 5 ppt
        bindsym Down resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # same as last ones, but slightly bigger
        bindsym Shift+Left resize shrink width 10 px or 10 ppt
        bindsym Shift+Up resize grow height 10 px or 10 ppt
        bindsym Shift+Down resize shrink height 10 px or 10 ppt
        bindsym Shift+Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+Mod1+Left resize shrink width 5 px or 5 ppt
bindsym $mod+Mod1+Up resize grow height 5 px or 5 ppt
bindsym $mod+Mod1+Down resize shrink height 5 px or 5 ppt
bindsym $mod+Mod1+Right resize grow width 5 px or 5 ppt

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
        #position top
        #status_command i3blocks -c ~/.config/i3/blocks.conf
#}

exec_always --no-startup-id ~/.config/polybar/launch.sh

# media controls
# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -steps 100 -inc 10 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -steps 100 -dec 10 # decrease screen brightness

# Touchpad controls
exec_always --no-startup-id xinput --set-prop "SYNA2393:00 06CB:7A13 Touchpad" "libinput Tapping Enabled" 1
exec_always --no-startup-id xinput --set-prop "SYNA2393:00 06CB:7A13 Touchpad" "libinput Natural Scrolling Enabled" 1
exec_always --no-startup-id xinput --set-prop "DELL07E6:00 06CB:76AF Touchpad" "libinput Natural Scrolling Enabled" 1
exec_always --no-startup-id xinput --set-prop "SYNA2393:00 06CB:7A13 Touchpad" "libinput Disable While Typing Enabled" 0


# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# lock screen on lid close
exec --no-startup-id xss-lock -- ~/.config/i3/lock.sh

# autostart pprograms
# exec nm-applet --no-agent
exec ~/run_wifi.sh
exec ~/.config/i3/load_layout.sh
exec --no-startup-id systemsettings5
exec redshift -l 53.534574:-113.709156 -t 6500K:4000K
exec $terminal
exec_always ~/run_wifi.sh
